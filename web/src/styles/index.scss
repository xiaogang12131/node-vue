@import './mixin';
@import './variables';

//reset
* {
  box-sizing: border-box;
}

a {
  color: #fff;
  text-decoration: none;
}

// common 
.pull-left {
  float: left;
}

.pull-right {
  float: right;
}

.clearfix {
  @include clearfix;
}

// text-align
@each $var in (left, right, center) {
  .text-#{$var} {
    text-align: $var;
  }
}

// text-color,bg-color
@each $colorKey,
$color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }
}

@each $sizeKey,
$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size;
  }
}

// felx
.d-flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key,
$value in $flex-jc {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}

.flex-grow-1 {
  flex-grow: 1;
}

//margin,padding
@each $typeKey,
$type in $spacing-types {

  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $base-spacing-type;
    }

    .#{$typeKey}x-#{$sizeKey} {
      #{$type}: 0 $size * $base-spacing-type;
    }

    .#{$typeKey}y-#{$sizeKey} {
      #{$type}: $size * $base-spacing-type 0;
    }
  }

  @each $directionKey,
  $direction in $spacing-directions {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $base-spacing-type;
      }
    }
  }
}

//border-1
.border-1:after {
  position: absolute;
  bottom: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 1px;
  background: #d4d9de;
  transform: scaleY(.5);
}